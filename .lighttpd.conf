
#debug.log-request-handling = "enable"

# FIXME: this doesn't prevent creation of error.log and access.log, so it's
# useless atm
#$HTTP["url"] =~ "^/phetools($|/)" {
#	accesslog.filename = "/data/project/phetools/log/lighttpd.access.log"
#	server.errorlog = "/data/project/phetools/log/lighttpd.error.log"
#}

$HTTP["url"] =~ "^/log-irc($|/)" {
	dir-listing.activate = "enable"
	mimetype.assign = (
		".txt" =>  "text/plain; charset=utf-8"
	)
}

$HTTP["url"] =~ "^/not_transcluded($|/)" {
        dir-listing.activate = "enable"
        mimetype.assign = (
                ".txt" =>  "text/plain; charset=utf-8",
		".html" => "text/html; charset=utf-8"
        )
}


# to avoid too much vm use but it breaks php when max-procs = CHILD = 1
# and even with max-procs = 2, CHILD = 1 (status.php seems to deadlock
# unsure why, prolly other php call through the web interface doesn't
# terminate so all thread are busy until a timeout occur, or perhaps
# the actual pywikibot breakage cause a mishandled exception)
#fastcgi.server += ( ".php" =>
#        ((
#                "bin-path" => "/usr/bin/php-cgi",
#                "socket" => "/tmp/php.socket.phetools",
#                "max-procs" => 2,
#                "bin-environment" => (
#                        "PHP_FCGI_CHILDREN" => "1",
#                        "PHP_FCGI_MAX_REQUESTS" => "500"
#                ),
#                "bin-copy-environment" => (
#                        "PATH", "SHELL", "USER"
#                ),
#                "broken-scriptfilename" => "enable",
#                "allow-x-send-file" => "enable"
#         ))
#)

fastcgi.server += (
    "/hocr_cgi.py" =>
    ((
        "socket" => "/tmp/python.hocr_fcgi.socket.phetools",
        "bin-path" => "/data/project/phetools/phe/hocr/hocr_fcgi.py",
        "check-local" => "disable",
        "max-procs" => 1,
    ))
)

fastcgi.server += (
    "/credits.py" =>
    ((
        "socket" => "/tmp/python.credits_fcgi.socket.phetools",
        "bin-path" => "/data/project/phetools/phe/history_credit/credits_fcgi.py",
        "check-local" => "disable",
        "max-procs" => 1,
    ))
)

fastcgi.server += (
    "/pdf_to_djvu_cgi.py" =>
    ((
        "socket" => "/tmp/python.pdf_to_djvu_fcgi.socket.phetools",
        "bin-path" => "/data/project/phetools/phe/ocr/pdf_to_djvu_fcgi.py",
        "check-local" => "disable",
        "max-procs" => 1,
    ))
)

fastcgi.server += (
    "/pages_without_scan.py" =>
    ((
        "socket" => "/tmp/python.pages_without_scan_fcgi.socket.phetools",
        "bin-path" => "/data/project/phetools/phe/pages_without_scan/pages_without_scan_fcgi.py",
        "check-local" => "disable",
        "max-procs" => 1,
    ))
)

fastcgi.server += (
    "/modernization_cgi.py" =>
    ((
        "socket" => "/tmp/python.modernization_fcgi.socket.phetools",
        "bin-path" => "/data/project/phetools/phe/modernization/modernization_fcgi.py",
        "check-local" => "disable",
        "max-procs" => 1,
    ))
)
